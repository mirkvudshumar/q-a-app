{"version":3,"sources":["components/ViewQuestions/QaElement/QaElement.module.css","hoc/Aux.js","components/ViewQuestions/QaElement/QaElement.js","components/ViewQuestions/ViewQuestions.js","components/CreateQuestion/CreateQuestion.js","components/Sidebar/Sidebar.js","containers/QaTool/QaTool.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","qaElement","answer","show","key","id","className","styles","qaSection","onClick","clicked","question","buttonsSection","edit","class","remove","removeQuestion","viewQuestions","questionList","qa","map","e","index","QaElement","noQuestionsStyle","length","backgroundColor","Aux","data-tooltip","style","sort","removeAll","createQuestion","onSubmit","submit","autoComplete","htmlFor","name","type","required","sidebar","sideText","qaPairs","QaTool","state","handleSubmit","event","preventDefault","input","target","value","updatedState","setState","showAnswer","clickedQuestion","findIndex","shouldShow","sortQuestions","qaList","a","b","toLowerCase","splice","editQuestion","Sidebar","this","ViewQuestions","CreateQuestion","Component","App","classes","Content","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,eAAiB,kCAAkC,KAAO,wBAAwB,OAAS,4B,kRCCvIC,G,YAFH,SAACC,GAAD,OAAWA,EAAMC,W,gBCwBdC,EApBG,SAACF,GAClB,IAAIG,EAASH,EAAMI,KAAOJ,EAAMG,OAAS,KACzC,OACE,wBAAIE,IAAKL,EAAMM,IACd,yBAAKC,UAAWC,IAAOC,WACtB,uBAAGC,QAASV,EAAMW,SAAUX,EAAMY,UAClC,2BAAIT,IAEL,yBAAKI,UAAWC,IAAOK,gBACtB,4BAAQN,UAAWC,IAAOM,KAAMJ,QAASV,EAAMc,MAC9C,uBAAGC,MAAM,uBAEV,4BAAQR,UAAWC,IAAOQ,OAAQN,QAASV,EAAMiB,gBAChD,uBAAGF,MAAM,yBC8BAG,EAzCO,SAAClB,GACtB,IAAImB,EAAenB,EAAMoB,GAAGC,KAAI,SAACC,EAAGC,GACnC,OACC,kBAACC,EAAD,CACClB,GAAIgB,EAAEhB,GACNM,SAAUU,EAAEV,SACZT,OAAQmB,EAAEnB,OACVQ,QAAS,kBAAMX,EAAMW,QAAQW,EAAEhB,KAC/BF,KAAMkB,EAAElB,KACRa,eAAgB,kBAAMjB,EAAMiB,eAAeK,EAAEhB,UAI5CmB,EAAmB,KAMvB,OALwB,IAApBzB,EAAMoB,GAAGM,SACZP,EAAe,+CACfM,EAAmB,CAACE,gBAAiB,YAIrC,kBAACC,EAAD,KACC,gDAEC,0BACCrB,UAAU,UACVsB,eAAa,0DAEb,kCAGF,wBAAIC,MAAOL,GACTN,GAEF,yBAAKZ,UAAU,WACd,4BAAQA,UAAU,OAAOG,QAASV,EAAM+B,MAAxC,QACA,4BAAQxB,UAAU,YAAYG,QAASV,EAAMgC,WAA7C,uBCJWC,G,MAhCQ,SAACjC,GACvB,OACC,kBAAC4B,EAAD,KACC,oDAEC,0BACCrB,UAAU,UACVsB,eAAa,wDAEb,kCAGF,0BAAMK,SAAUlC,EAAMmC,OAAQC,aAAa,OAC1C,2BAAOC,QAAQ,YAAf,YACA,2BACCC,KAAK,WACLC,KAAK,OACLC,UAAQ,IAGT,2BAAOH,QAAQ,UAAf,UACA,8BACCC,KAAK,SACLE,UAAQ,IAGT,4BAAQjC,UAAU,UAAlB,cCZWkC,EAjBC,SAACzC,GAChB,IAAI0C,EAAW,KAaf,OAX4B,IAAzB1C,EAAM2C,QAAQjB,OAChBgB,EAAW,uGAGsB,IAAzB1C,EAAM2C,QAAQjB,OACtBgB,EAAW,uGAEH1C,EAAM2C,QAAQjB,OAAS,IAC/BgB,EAAW,gDAAsB1C,EAAM2C,QAAQjB,OAApC,yDAGLgB,GC8DOE,E,2MAtEdC,MAAQ,CACPF,QAAU,I,EAGXG,aAAe,SAACC,GACfA,EAAMC,iBACN,IACMC,EAAS,CACd3C,GAFuB,EAAKuC,MAAMF,QAAQjB,OAG1Cd,SAAUmC,EAAMG,OAAOtC,SAASuC,MAChChD,OAAQ4C,EAAMG,OAAO/C,OAAOgD,MAC5B/C,MAAM,GAEDgD,EAAY,sBAAO,EAAKP,MAAMF,SAAlB,CAA2BM,IAC7C,EAAKI,SAAS,CAACV,QAASS,K,EAGzBE,WAAa,SAAChD,GACb,IAAI8C,EAAY,YAAO,EAAKP,MAAMF,SAC5BY,EAAkBH,EAAaI,WAAU,SAAAlC,GAAC,OAAIhB,IAAOgB,EAAEhB,MACvDmD,EAAaL,EAAaG,GAAiBnD,KACjDgD,EAAaG,GAAiBnD,MAAQqD,EACtC,EAAKJ,SAAS,CAACV,QAASS,K,EAGzBM,cAAgB,WACf,IAAIC,EAAM,YAAO,EAAKd,MAAMF,SAC5BgB,EAASA,EAAO5B,MAAK,SAAC6B,EAAGC,GAAJ,OAAWD,EAAEhD,SAASkD,cAAgBD,EAAEjD,SAASkD,cAAiB,GAAK,KAC5F,EAAKT,SAAS,CAACV,QAASgB,K,EAGzB3B,UAAY,WACX,EAAKqB,SAAS,CAACV,QAAS,M,EAGzB1B,eAAiB,SAACX,GACjB,IAAI8C,EAAY,YAAO,EAAKP,MAAMF,SAC5BY,EAAkBH,EAAaI,WAAU,SAAAlC,GAAC,OAAIhB,IAAOgB,EAAEhB,MAC7D8C,EAAaW,OAAOR,EAAiB,GACrC,EAAKF,SAAS,CAACV,QAASS,K,EAGzBY,aAAe,SAAC1D,K,wEAKf,OACC,yBAAKC,UAAU,WACd,wCACA,yBAAKA,UAAU,WACd,+BACC,kBAAC0D,EAAD,CAAStB,QAASuB,KAAKrB,MAAMF,WAE9B,8BACC,kBAACwB,EAAD,CACC/C,GAAI8C,KAAKrB,MAAMF,QACfhC,QAASuD,KAAKZ,WACdtB,UAAWkC,KAAKlC,UAChBD,KAAMmC,KAAKR,cACXzC,eAAgBiD,KAAKjD,iBAEtB,kBAACmD,EAAD,CAAgBjC,OAAQ+B,KAAKpB,sB,GA/DduB,aCKNC,MARf,WACE,OACC,yBAAK/D,UAAWgE,IAAQC,SACvB,kBAAC,EAAD,QCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.10e9b61a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"qaSection\":\"QaElement_qaSection__2Z002\",\"buttonsSection\":\"QaElement_buttonsSection__2yvSN\",\"edit\":\"QaElement_edit__T2e0z\",\"remove\":\"QaElement_remove__2LBI-\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport styles from './QaElement.module.css';\n\nconst qaElement = (props) => {\n\tlet answer = props.show ? props.answer : null;\n\treturn(\n\t\t\t<li key={props.id} >\n\t\t\t\t<div className={styles.qaSection}>\n\t\t\t\t\t<p onClick={props.clicked}>{props.question}</p>\n\t\t\t\t\t<p>{answer}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.buttonsSection}>\n\t\t\t\t\t<button className={styles.edit} onClick={props.edit}>\n\t\t\t\t\t\t<i class=\"fas fa-pen-square\"></i>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className={styles.remove} onClick={props.removeQuestion}>\n\t\t\t\t\t\t<i class=\"fas fa-trash-alt\"></i>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</li>\n\t)\n}\n\nexport default qaElement;","import React from 'react';\n\nimport './ViewQuestions.module.css';\nimport Aux from '../../hoc/Aux';\nimport QaElement from './QaElement/QaElement';\n\nconst viewQuestions = (props) => {\n\tlet questionList = props.qa.map((e, index) => {\n\t\treturn (\n\t\t\t<QaElement \n\t\t\t\tid={e.id}\n\t\t\t\tquestion={e.question}\n\t\t\t\tanswer={e.answer}\n\t\t\t\tclicked={() => props.clicked(e.id)}\n\t\t\t\tshow={e.show}\n\t\t\t\tremoveQuestion={() => props.removeQuestion(e.id)}\n\t\t\t/>\n\t\t);\n\t});\n\tlet noQuestionsStyle = null;\n\tif (props.qa.length === 0) {\n\t\tquestionList = <p>No questions yet</p>\n\t\tnoQuestionsStyle = {backgroundColor: '#ffccd2'};\n\t}\n\n\treturn (\n\t\t<Aux>\n\t\t\t<h2>\n\t\t\t\tCreated questions\n\t\t\t\t<span \n\t\t\t\t\tclassName=\"tooltip\" \n\t\t\t\t\tdata-tooltip=\"Here you can find created questions and their answers.\"\n\t\t\t\t> \n\t\t\t\t\t<p>?</p>\n\t\t\t\t</span>\n\t\t\t</h2>\n\t\t\t<ul style={noQuestionsStyle}>\n\t\t\t\t{questionList}\t\n\t\t\t</ul>\n\t\t\t<div className=\"Buttons\">\n\t\t\t\t<button className=\"sort\" onClick={props.sort}>Sort</button>\n\t\t\t\t<button className=\"removeAll\" onClick={props.removeAll}>Remove questions</button>\n\t\t\t</div>\n\t\t</Aux>\n\t)\n}\n\nexport default viewQuestions;","import React from 'react';\n\nimport './CreateQuestion.module.css';\nimport Aux from '../../hoc/Aux';\n\nconst createQuestion = (props) => {\n\treturn (\n\t\t<Aux>\n\t\t\t<h2>\n\t\t\t\tCreate a new question\n\t\t\t\t<span \n\t\t\t\t\tclassName=\"tooltip\" \n\t\t\t\t\tdata-tooltip=\"Here you can create new questions and their answers.\"\n\t\t\t\t>\n\t\t\t\t\t<p>?</p>\n\t\t\t\t</span>\n\t\t\t</h2>\n\t\t\t<form onSubmit={props.submit} autoComplete=\"off\">\n\t\t\t\t<label htmlFor=\"question\">Question</label>\n\t\t\t\t<input  \n\t\t\t\t\tname=\"question\" \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\trequired\n\t\t\t\t>\n\t\t\t\t</input>\n\t\t\t\t<label htmlFor=\"answer\">Answer</label>\n\t\t\t\t<textarea\n\t\t\t\t\tname=\"answer\"  \n\t\t\t\t\trequired\n\t\t\t\t>\t\n\t\t\t\t</textarea>\n\t\t\t\t<button className=\"create\">Submit</button>\n\t\t\t</form>\n\t\t</Aux>\n\t)\n}\n\nexport default createQuestion;","import React from 'react';\n\nconst sidebar = (props) => {\n\tlet sideText = null;\n\n\tif(props.qaPairs.length === 0) {\n\t\tsideText = <p>Here you can find no questions. Feel free to create your own questions! </p>;\n\t}\n\n\telse if (props.qaPairs.length === 1) {\n\t\tsideText = <p>Here you can find one question. Feel free to create your own questions! </p>;\n\t}\n\telse if (props.qaPairs.length > 1) {\n\t\tsideText = <p>Here you can find {props.qaPairs.length} questions. Feel free to create your own questions! </p>;\n\t}\n\n\treturn sideText;\n}\n\nexport default sidebar;","import React, { Component } from 'react';\n\nimport './QaTool.css';\nimport ViewQuestions from '../../components/ViewQuestions/ViewQuestions';\nimport CreateQuestion from '../../components/CreateQuestion/CreateQuestion';\nimport Sidebar from '../../components/Sidebar/Sidebar';\n\nclass QaTool extends Component {\n\tstate = {\n\t\tqaPairs : []\n\t}\t\n\t\n\thandleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst questionsNumber = this.state.qaPairs.length;\n\t\tconst input =  {\n\t\t\tid: questionsNumber,\n\t\t\tquestion: event.target.question.value,\n\t\t\tanswer: event.target.answer.value,\n\t\t\tshow: false\n\t\t};\n\t\tconst updatedState = [...this.state.qaPairs, input];\n\t\tthis.setState({qaPairs: updatedState});\n\t}\n\n\tshowAnswer = (id) => {\n\t\tlet updatedState = [...this.state.qaPairs];\n\t\tconst clickedQuestion = updatedState.findIndex(e => id === e.id);\n\t\tconst shouldShow = updatedState[clickedQuestion].show;\n\t\tupdatedState[clickedQuestion].show = !shouldShow;\n\t\tthis.setState({qaPairs: updatedState});\n\t}\n\n\tsortQuestions = () => {\n\t\tlet qaList = [...this.state.qaPairs];\n\t\tqaList = qaList.sort((a, b) => (a.question.toLowerCase() > b.question.toLowerCase()) ? 1 : -1);\n\t\tthis.setState({qaPairs: qaList});\n\t}\n\n\tremoveAll = () => {\n\t\tthis.setState({qaPairs: []});\n\t}\n\n\tremoveQuestion = (id) => {\n\t\tlet updatedState = [...this.state.qaPairs];\n\t\tconst clickedQuestion = updatedState.findIndex(e => id === e.id);\n\t\tupdatedState.splice(clickedQuestion, 1);\n\t\tthis.setState({qaPairs: updatedState});\n\t}\n\n\teditQuestion = (id) => {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"content\">\n\t\t\t\t<h1>Q/A tool</h1>\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t<aside>\n\t\t\t\t\t\t<Sidebar qaPairs={this.state.qaPairs}/>\n\t\t\t\t\t</aside>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<ViewQuestions \n\t\t\t\t\t\t\tqa={this.state.qaPairs} \n\t\t\t\t\t\t\tclicked={this.showAnswer} \n\t\t\t\t\t\t\tremoveAll={this.removeAll}\n\t\t\t\t\t\t\tsort={this.sortQuestions}\n\t\t\t\t\t\t\tremoveQuestion={this.removeQuestion} \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CreateQuestion submit={this.handleSubmit} />\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\t\n\t}\n}\n\nexport default QaTool;","import React from 'react';\nimport classes from './App.css';\nimport QaTool from './containers/QaTool/QaTool'\n\nfunction App() {\n  return (\n  \t<div className={classes.Content}>\n  \t\t<QaTool />\n  \t</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}